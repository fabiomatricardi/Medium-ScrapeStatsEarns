.\gh auth login
git init
git remote add origin https://github.com/fabiomatricardi/Medium-ScrapeStatsEarns.git

#more about gitignore
https://linuxize.com/post/gitignore-ignoring-files-in-git/

echo > .gitignore

to remove all staged files at once
git reset HEAD -- .

PS C:\Users\fmatricard\Videos\2023.04\2023.06 personal\bs4> git push -u origin master
Enumerating objects: 21, done.
Counting objects: 100% (21/21), done.
Delta compression using up to 8 threads
Compressing objects: 100% (21/21), done.
Writing objects: 100% (21/21), 75.14 KiB | 2.09 MiB/s, done.
Total 21 (delta 9), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (9/9), done.
remote: 
remote: Create a pull request for 'master' on GitHub by visiting:
remote:      https://github.com/fabiomatricardi/Medium-ScrapeStatsEarns/pull/new/master
remote:
To https://github.com/fabiomatricardi/Medium-ScrapeStatsEarns.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

# to align files in Github to your local repo use
git pull origin master

Force git pull to Overwrite Local Files
If you have made commits locally that you regret, you may want your local branch to match the remote branch without saving any of your work. This can be done using git reset. First, make sure you have the most recent copy of that remote tracking branch by fetching.

git fetch <remote> <branch>
ex: git fetch origin main

Then, use git reset --hard to move the HEAD pointer and the current branch pointer to the most recent commit as it exists on that remote tracking branch.

git reset --hard <remote>/<branch>
ex: git reset --hard origin/main

_Note: You can find the remotes with git remote -v, and see all available remote tracking branches with git branch --all.